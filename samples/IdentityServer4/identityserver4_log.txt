2019-02-22 19:31:33.136 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 19:31:33.174 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 19:31:33.179 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 19:31:33.179 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 19:31:33.180 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 19:31:33.180 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 19:31:33.180 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 19:31:33.805 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 19:31:33.808 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 19:31:33.808 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 19:31:33.809 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 19:31:33.809 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 19:31:33.809 +07:00 [DBG] Error Url: /home/error
2019-02-22 19:31:33.809 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 19:33:01.766 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 19:33:01.771 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 19:33:01.771 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 19:33:01.774 +07:00 [DBG] Start discovery request
2019-02-22 19:33:01.847 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 19:33:01.847 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 19:33:01.847 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 19:33:01.847 +07:00 [WRN] Discovery endpoint only supports GET requests
2019-02-22 19:33:01.854 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 19:33:01.854 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 19:33:01.854 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 19:33:01.854 +07:00 [WRN] Discovery endpoint only supports GET requests
2019-02-22 19:33:17.142 +07:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-02-22 21:54:40.815 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 21:54:40.849 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 21:54:40.852 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 21:54:40.852 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 21:54:40.852 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 21:54:40.852 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 21:54:40.852 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 21:54:41.325 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 21:54:41.327 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 21:54:41.327 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 21:54:41.327 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 21:54:41.327 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 21:54:41.328 +07:00 [DBG] Error Url: /home/error
2019-02-22 21:54:41.328 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 21:54:41.383 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 21:54:41.386 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 21:54:41.387 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 21:54:41.391 +07:00 [DBG] Start discovery request
2019-02-22 21:54:41.544 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 21:54:41.544 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 21:54:41.545 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 21:54:41.549 +07:00 [DBG] Start key discovery request
2019-02-22 21:54:45.492 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 21:54:45.499 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 21:54:45.499 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 21:54:45.507 +07:00 [DBG] Start token request.
2019-02-22 21:54:45.512 +07:00 [DBG] Start client validation
2019-02-22 21:54:45.519 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 21:54:45.524 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 21:54:45.540 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 21:54:45.540 +07:00 [DBG] Secret id found: client
2019-02-22 21:54:45.551 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 21:54:45.558 +07:00 [DBG] No matching hashed secret found.
2019-02-22 21:54:45.559 +07:00 [DBG] Secret validators could not validate secret
2019-02-22 21:54:45.583 +07:00 [INF] {"ClientId":"client","Category":"Authentication","Name":"Client Authentication Failure","EventType":"Failure","Id":1011,"Message":"Invalid client secret","ActivityId":"0HLKOQMM9VI2H:00000004","TimeStamp":"2019-02-22T14:54:45.0000000Z","ProcessId":3116,"LocalIpAddress":"127.0.0.1:13964","RemoteIpAddress":"::1","$type":"ClientAuthenticationFailureEvent"}
2019-02-22 21:54:45.591 +07:00 [ERR] Client secret validation failed for client: client.
2019-02-22 21:57:26.618 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 21:57:26.652 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 21:57:26.655 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 21:57:26.656 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 21:57:26.656 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 21:57:26.656 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 21:57:26.656 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 21:57:27.123 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 21:57:27.126 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 21:57:27.126 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 21:57:27.126 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 21:57:27.126 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 21:57:27.126 +07:00 [DBG] Error Url: /home/error
2019-02-22 21:57:27.126 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 21:57:27.160 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 21:57:27.163 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 21:57:27.163 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 21:57:27.166 +07:00 [DBG] Start discovery request
2019-02-22 21:57:27.407 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 21:57:27.407 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 21:57:27.408 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 21:57:27.412 +07:00 [DBG] Start key discovery request
2019-02-22 21:57:37.893 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 21:57:37.904 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 21:57:37.904 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 21:57:37.913 +07:00 [DBG] Start token request.
2019-02-22 21:57:37.919 +07:00 [DBG] Start client validation
2019-02-22 21:57:37.927 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 21:57:37.932 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 21:57:37.947 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 21:57:37.947 +07:00 [DBG] Secret id found: client
2019-02-22 21:57:37.958 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 21:57:37.965 +07:00 [DBG] No matching hashed secret found.
2019-02-22 21:57:37.966 +07:00 [DBG] Secret validators could not validate secret
2019-02-22 21:57:37.988 +07:00 [INF] {"ClientId":"client","Category":"Authentication","Name":"Client Authentication Failure","EventType":"Failure","Id":1011,"Message":"Invalid client secret","ActivityId":"0HLKOQO7N6QAB:00000002","TimeStamp":"2019-02-22T14:57:37.0000000Z","ProcessId":21592,"LocalIpAddress":"127.0.0.1:19679","RemoteIpAddress":"::1","$type":"ClientAuthenticationFailureEvent"}
2019-02-22 21:57:37.996 +07:00 [ERR] Client secret validation failed for client: client.
2019-02-22 22:01:16.762 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 22:01:16.797 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 22:01:16.800 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 22:01:16.801 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 22:01:16.801 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 22:01:16.801 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 22:01:16.801 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 22:01:17.438 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 22:01:17.441 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 22:01:17.441 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 22:01:17.441 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 22:01:17.441 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 22:01:17.441 +07:00 [DBG] Error Url: /home/error
2019-02-22 22:01:17.441 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 22:01:17.500 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 22:01:17.505 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 22:01:17.505 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 22:01:17.510 +07:00 [DBG] Start discovery request
2019-02-22 22:01:17.876 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 22:01:17.877 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 22:01:17.877 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 22:01:17.883 +07:00 [DBG] Start key discovery request
2019-02-22 22:01:19.588 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 22:01:19.595 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 22:01:19.595 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 22:01:19.603 +07:00 [DBG] Start token request.
2019-02-22 22:01:19.612 +07:00 [DBG] Start client validation
2019-02-22 22:01:19.620 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 22:01:19.625 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 22:01:19.642 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 22:01:19.642 +07:00 [DBG] Secret id found: client
2019-02-22 22:01:19.655 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 22:01:19.665 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-22 22:01:19.665 +07:00 [DBG] Client validation success
2019-02-22 22:01:19.688 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKOQQCA6NGK:00000002","TimeStamp":"2019-02-22T15:01:19.0000000Z","ProcessId":14776,"LocalIpAddress":"127.0.0.1:38664","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-22 22:01:19.703 +07:00 [DBG] Start token request validation
2019-02-22 22:01:19.710 +07:00 [DBG] Start client credentials token request validation
2019-02-22 22:01:19.734 +07:00 [DBG] client credentials token request validation success
2019-02-22 22:01:19.741 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-22 22:01:19.763 +07:00 [DBG] Getting claims for access token for client: client
2019-02-22 22:13:25.917 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 22:13:25.949 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 22:13:25.953 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 22:13:25.953 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 22:13:25.953 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 22:13:25.953 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 22:13:25.953 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 22:13:26.383 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 22:13:26.385 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 22:13:26.385 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 22:13:26.385 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 22:13:26.385 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 22:13:26.385 +07:00 [DBG] Error Url: /home/error
2019-02-22 22:13:26.385 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 22:14:48.354 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 22:14:48.358 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 22:14:48.358 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 22:14:48.362 +07:00 [DBG] Start discovery request
2019-02-22 22:14:48.524 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 22:14:48.524 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 22:14:48.525 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 22:14:48.529 +07:00 [DBG] Start key discovery request
2019-02-22 22:14:58.313 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 22:14:58.325 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 22:14:58.325 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 22:14:58.333 +07:00 [DBG] Start token request.
2019-02-22 22:14:58.339 +07:00 [DBG] Start client validation
2019-02-22 22:14:58.345 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 22:14:58.349 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 22:14:58.364 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 22:14:58.364 +07:00 [DBG] Secret id found: client
2019-02-22 22:14:58.375 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 22:14:58.383 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-22 22:14:58.383 +07:00 [DBG] Client validation success
2019-02-22 22:14:58.404 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKOR15KDREU:00000004","TimeStamp":"2019-02-22T15:14:58.0000000Z","ProcessId":720,"LocalIpAddress":"127.0.0.1:22674","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-22 22:14:58.418 +07:00 [DBG] Start token request validation
2019-02-22 22:14:58.424 +07:00 [DBG] Start client credentials token request validation
2019-02-22 22:14:58.446 +07:00 [DBG] client credentials token request validation success
2019-02-22 22:14:58.453 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-22 22:14:58.475 +07:00 [DBG] Getting claims for access token for client: client
2019-02-22 22:15:25.212 +07:00 [INF] {"Details":"Fernet.FernetException: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters. ---> System.FormatException: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.\r\n   at System.Convert.FromBase64CharPtr(Char* inputPtr, Int32 inputLength)\r\n   at System.Convert.FromBase64CharArray(Char[] inArray, Int32 offset, Int32 length)\r\n   at Fernet.Base64StringExtensions.UrlSafe64Decode(String s) in E:\\oss\\github\\fernet-dotnet\\src\\Fernet\\Base64StringExtensions.cs:line 84\r\n   --- End of inner exception stack trace ---\r\n   at Fernet.Base64StringExtensions.UrlSafe64Decode(String s) in E:\\oss\\github\\fernet-dotnet\\src\\Fernet\\Base64StringExtensions.cs:line 89\r\n   at MyIdentityServer4.Customized.MyTokenCreationService.CreateTokenAsync(Token token) in E:\\oss\\github\\fernet-dotnet\\samples\\IdentityServer4\\Customized\\MyTokenCreationService.cs:line 27\r\n   at IdentityServer4.Services.DefaultTokenService.CreateSecurityTokenAsync(Token token) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Services\\Default\\DefaultTokenService.cs:line 210\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.CreateAccessTokenAsync(ValidatedTokenRequest request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\ResponseHandling\\Default\\TokenResponseGenerator.cs:line 400\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.ProcessTokenRequestAsync(TokenRequestValidationResult validationResult) in C:\\local\\identity\\server4\\IdentityServer4\\src\\ResponseHandling\\Default\\TokenResponseGenerator.cs:line 313\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.ProcessAsync(TokenRequestValidationResult request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\ResponseHandling\\Default\\TokenResponseGenerator.cs:line 84\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Endpoints\\TokenEndpoint.cs:line 98\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Endpoints\\TokenEndpoint.cs:line 70\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.","ActivityId":"0HLKOR15KDREU:00000004","TimeStamp":"2019-02-22T15:15:25.0000000Z","ProcessId":720,"LocalIpAddress":"127.0.0.1:22674","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2019-02-22 22:15:25.212 +07:00 [FTL] Unhandled exception: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.
Fernet.FernetException: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters. ---> System.FormatException: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.
   at System.Convert.FromBase64CharPtr(Char* inputPtr, Int32 inputLength)
   at System.Convert.FromBase64CharArray(Char[] inArray, Int32 offset, Int32 length)
   at Fernet.Base64StringExtensions.UrlSafe64Decode(String s) in E:\oss\github\fernet-dotnet\src\Fernet\Base64StringExtensions.cs:line 84
   --- End of inner exception stack trace ---
   at Fernet.Base64StringExtensions.UrlSafe64Decode(String s) in E:\oss\github\fernet-dotnet\src\Fernet\Base64StringExtensions.cs:line 89
   at MyIdentityServer4.Customized.MyTokenCreationService.CreateTokenAsync(Token token) in E:\oss\github\fernet-dotnet\samples\IdentityServer4\Customized\MyTokenCreationService.cs:line 27
   at IdentityServer4.Services.DefaultTokenService.CreateSecurityTokenAsync(Token token) in C:\local\identity\server4\IdentityServer4\src\Services\Default\DefaultTokenService.cs:line 210
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.CreateAccessTokenAsync(ValidatedTokenRequest request) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\TokenResponseGenerator.cs:line 400
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.ProcessTokenRequestAsync(TokenRequestValidationResult validationResult) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\TokenResponseGenerator.cs:line 313
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.ProcessAsync(TokenRequestValidationResult request) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\TokenResponseGenerator.cs:line 84
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\TokenEndpoint.cs:line 98
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\TokenEndpoint.cs:line 70
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
2019-02-22 22:15:25.216 +07:00 [ERR] An unhandled exception has occurred while executing the request.
Fernet.FernetException: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters. ---> System.FormatException: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.
   at System.Convert.FromBase64CharPtr(Char* inputPtr, Int32 inputLength)
   at System.Convert.FromBase64CharArray(Char[] inArray, Int32 offset, Int32 length)
   at Fernet.Base64StringExtensions.UrlSafe64Decode(String s) in E:\oss\github\fernet-dotnet\src\Fernet\Base64StringExtensions.cs:line 84
   --- End of inner exception stack trace ---
   at Fernet.Base64StringExtensions.UrlSafe64Decode(String s) in E:\oss\github\fernet-dotnet\src\Fernet\Base64StringExtensions.cs:line 89
   at MyIdentityServer4.Customized.MyTokenCreationService.CreateTokenAsync(Token token) in E:\oss\github\fernet-dotnet\samples\IdentityServer4\Customized\MyTokenCreationService.cs:line 27
   at IdentityServer4.Services.DefaultTokenService.CreateSecurityTokenAsync(Token token) in C:\local\identity\server4\IdentityServer4\src\Services\Default\DefaultTokenService.cs:line 210
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.CreateAccessTokenAsync(ValidatedTokenRequest request) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\TokenResponseGenerator.cs:line 400
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.ProcessTokenRequestAsync(TokenRequestValidationResult validationResult) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\TokenResponseGenerator.cs:line 313
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.ProcessAsync(TokenRequestValidationResult request) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\TokenResponseGenerator.cs:line 84
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\TokenEndpoint.cs:line 98
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\TokenEndpoint.cs:line 70
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-02-22 22:19:36.611 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 22:19:36.646 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 22:19:36.649 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 22:19:36.649 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 22:19:36.649 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 22:19:36.649 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 22:19:36.649 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 22:19:37.203 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 22:19:37.206 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 22:19:37.206 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 22:19:37.206 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 22:19:37.206 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 22:19:37.206 +07:00 [DBG] Error Url: /home/error
2019-02-22 22:19:37.206 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 22:19:37.255 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 22:19:37.259 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 22:19:37.259 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 22:19:37.263 +07:00 [DBG] Start discovery request
2019-02-22 22:19:37.504 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 22:19:37.505 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 22:19:37.505 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 22:19:37.511 +07:00 [DBG] Start key discovery request
2019-02-22 22:19:40.834 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 22:19:40.840 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 22:19:40.840 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 22:19:40.848 +07:00 [DBG] Start token request.
2019-02-22 22:19:40.855 +07:00 [DBG] Start client validation
2019-02-22 22:19:40.861 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 22:19:40.865 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 22:19:40.879 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 22:19:40.879 +07:00 [DBG] Secret id found: client
2019-02-22 22:19:40.891 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 22:19:40.899 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-22 22:19:40.899 +07:00 [DBG] Client validation success
2019-02-22 22:19:40.919 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKOR4K3UADC:00000002","TimeStamp":"2019-02-22T15:19:40.0000000Z","ProcessId":31788,"LocalIpAddress":"127.0.0.1:2719","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-22 22:19:40.934 +07:00 [DBG] Start token request validation
2019-02-22 22:19:40.940 +07:00 [DBG] Start client credentials token request validation
2019-02-22 22:19:40.961 +07:00 [DBG] client credentials token request validation success
2019-02-22 22:19:40.968 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-22 22:19:40.988 +07:00 [DBG] Getting claims for access token for client: client
2019-02-22 22:19:59.597 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****TA0=","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKOR4K3UADC:00000002","TimeStamp":"2019-02-22T15:19:59.0000000Z","ProcessId":31788,"LocalIpAddress":"127.0.0.1:2719","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-22 22:19:59.599 +07:00 [DBG] Token request success.
2019-02-22 22:21:10.836 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 22:21:10.868 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 22:21:10.871 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 22:21:10.871 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 22:21:10.871 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 22:21:10.871 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 22:21:10.871 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 22:21:11.355 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 22:21:11.357 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 22:21:11.357 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 22:21:11.357 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 22:21:11.357 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 22:21:11.357 +07:00 [DBG] Error Url: /home/error
2019-02-22 22:21:11.357 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 22:21:11.410 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 22:21:11.414 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 22:21:11.414 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 22:21:11.418 +07:00 [DBG] Start discovery request
2019-02-22 22:21:11.635 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 22:21:11.636 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 22:21:11.636 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 22:21:11.640 +07:00 [DBG] Start key discovery request
2019-02-22 22:21:15.366 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 22:21:15.373 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 22:21:15.373 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 22:21:15.382 +07:00 [DBG] Start token request.
2019-02-22 22:21:15.388 +07:00 [DBG] Start client validation
2019-02-22 22:21:15.393 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 22:21:15.397 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 22:21:15.413 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 22:21:15.413 +07:00 [DBG] Secret id found: client
2019-02-22 22:21:15.424 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 22:21:15.432 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-22 22:21:15.432 +07:00 [DBG] Client validation success
2019-02-22 22:21:15.453 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKOR5G5TK6V:00000002","TimeStamp":"2019-02-22T15:21:15.0000000Z","ProcessId":21876,"LocalIpAddress":"127.0.0.1:6455","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-22 22:21:15.466 +07:00 [DBG] Start token request validation
2019-02-22 22:21:15.474 +07:00 [DBG] Start client credentials token request validation
2019-02-22 22:21:15.495 +07:00 [DBG] client credentials token request validation success
2019-02-22 22:21:15.503 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-22 22:21:15.526 +07:00 [DBG] Getting claims for access token for client: client
2019-02-22 22:21:15.557 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****dMM=","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKOR5G5TK6V:00000002","TimeStamp":"2019-02-22T15:21:15.0000000Z","ProcessId":21876,"LocalIpAddress":"127.0.0.1:6455","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-22 22:21:15.560 +07:00 [DBG] Token request success.
2019-02-22 22:24:45.198 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 22:24:45.241 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 22:24:45.247 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 22:24:45.247 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 22:24:45.247 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 22:24:45.248 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 22:24:45.248 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 22:24:46.047 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 22:24:46.050 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 22:24:46.050 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 22:24:46.050 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 22:24:46.050 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 22:24:46.050 +07:00 [DBG] Error Url: /home/error
2019-02-22 22:24:46.050 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 22:24:46.123 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 22:24:46.131 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 22:24:46.131 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 22:24:46.140 +07:00 [DBG] Start discovery request
2019-02-22 22:24:46.449 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 22:24:46.450 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 22:24:46.450 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 22:24:46.463 +07:00 [DBG] Start key discovery request
2019-02-22 22:24:48.243 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 22:24:48.250 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 22:24:48.250 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 22:24:48.267 +07:00 [DBG] Start token request.
2019-02-22 22:24:48.273 +07:00 [DBG] Start client validation
2019-02-22 22:24:48.279 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 22:24:48.282 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 22:24:48.298 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 22:24:48.299 +07:00 [DBG] Secret id found: client
2019-02-22 22:24:48.311 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 22:24:48.318 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-22 22:24:48.319 +07:00 [DBG] Client validation success
2019-02-22 22:24:48.339 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKOR7G3T6N2:00000002","TimeStamp":"2019-02-22T15:24:48.0000000Z","ProcessId":860,"LocalIpAddress":"127.0.0.1:18488","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-22 22:24:48.355 +07:00 [DBG] Start token request validation
2019-02-22 22:24:48.361 +07:00 [DBG] Start client credentials token request validation
2019-02-22 22:24:48.381 +07:00 [DBG] client credentials token request validation success
2019-02-22 22:24:48.388 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-22 22:24:48.411 +07:00 [DBG] Getting claims for access token for client: client
2019-02-22 22:24:48.443 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****RRY=","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKOR7G3T6N2:00000002","TimeStamp":"2019-02-22T15:24:48.0000000Z","ProcessId":860,"LocalIpAddress":"127.0.0.1:18488","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-22 22:24:48.446 +07:00 [DBG] Token request success.
2019-02-22 22:26:07.268 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 22:26:07.305 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 22:26:07.307 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 22:26:07.308 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 22:26:07.308 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 22:26:07.308 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 22:26:07.308 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 22:26:07.828 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 22:26:07.830 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 22:26:07.830 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 22:26:07.830 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 22:26:07.831 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 22:26:07.831 +07:00 [DBG] Error Url: /home/error
2019-02-22 22:26:07.831 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 22:26:07.874 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 22:26:07.877 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 22:26:07.877 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 22:26:07.881 +07:00 [DBG] Start discovery request
2019-02-22 22:26:08.085 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 22:26:08.086 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 22:26:08.086 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 22:26:08.090 +07:00 [DBG] Start key discovery request
2019-02-22 22:26:10.387 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 22:26:10.401 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 22:26:10.401 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 22:26:10.411 +07:00 [DBG] Start token request.
2019-02-22 22:26:10.419 +07:00 [DBG] Start client validation
2019-02-22 22:26:10.427 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 22:26:10.432 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 22:26:10.453 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 22:26:10.454 +07:00 [DBG] Secret id found: client
2019-02-22 22:26:10.471 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 22:26:10.482 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-22 22:26:10.482 +07:00 [DBG] Client validation success
2019-02-22 22:26:10.509 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKOR88GV8NA:00000002","TimeStamp":"2019-02-22T15:26:10.0000000Z","ProcessId":34152,"LocalIpAddress":"127.0.0.1:46959","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-22 22:26:10.527 +07:00 [DBG] Start token request validation
2019-02-22 22:26:10.535 +07:00 [DBG] Start client credentials token request validation
2019-02-22 22:26:10.558 +07:00 [DBG] client credentials token request validation success
2019-02-22 22:26:10.566 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-22 22:26:10.587 +07:00 [DBG] Getting claims for access token for client: client
2019-02-22 22:26:10.616 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****J08=","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKOR88GV8NA:00000002","TimeStamp":"2019-02-22T15:26:10.0000000Z","ProcessId":34152,"LocalIpAddress":"127.0.0.1:46959","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-22 22:26:10.618 +07:00 [DBG] Token request success.
2019-02-22 22:26:19.673 +07:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-02-22 23:08:38.098 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-22 23:08:38.131 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-22 23:08:38.134 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-22 23:08:38.134 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-22 23:08:38.134 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-22 23:08:38.134 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-22 23:08:38.134 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-22 23:08:38.663 +07:00 [DBG] Login Url: /Account/Login
2019-02-22 23:08:38.665 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-22 23:08:38.665 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-22 23:08:38.665 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-22 23:08:38.665 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-22 23:08:38.665 +07:00 [DBG] Error Url: /home/error
2019-02-22 23:08:38.665 +07:00 [DBG] Error Id Parameter: errorId
2019-02-22 23:08:38.713 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-22 23:08:38.718 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-22 23:08:38.718 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-22 23:08:38.722 +07:00 [DBG] Start discovery request
2019-02-22 23:08:39.044 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-22 23:08:39.045 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-22 23:08:39.045 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-22 23:08:39.056 +07:00 [DBG] Start key discovery request
2019-02-22 23:08:49.653 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-22 23:08:49.660 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-22 23:08:49.660 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-22 23:08:49.667 +07:00 [DBG] Start token request.
2019-02-22 23:08:49.674 +07:00 [DBG] Start client validation
2019-02-22 23:08:49.679 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-22 23:08:49.682 +07:00 [DBG] Start parsing for secret in post body
2019-02-22 23:08:49.696 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-22 23:08:49.696 +07:00 [DBG] Secret id found: client
2019-02-22 23:08:49.707 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-22 23:08:49.715 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-22 23:08:49.715 +07:00 [DBG] Client validation success
2019-02-22 23:08:49.734 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKOS00O3T09:00000002","TimeStamp":"2019-02-22T16:08:49.0000000Z","ProcessId":25068,"LocalIpAddress":"127.0.0.1:28072","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-22 23:08:49.749 +07:00 [DBG] Start token request validation
2019-02-22 23:08:49.756 +07:00 [DBG] Start client credentials token request validation
2019-02-22 23:08:49.778 +07:00 [DBG] client credentials token request validation success
2019-02-22 23:08:49.786 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-22 23:08:49.812 +07:00 [DBG] Getting claims for access token for client: client
2019-02-22 23:09:20.591 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****EA==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKOS00O3T09:00000002","TimeStamp":"2019-02-22T16:09:20.0000000Z","ProcessId":25068,"LocalIpAddress":"127.0.0.1:28072","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-22 23:09:20.593 +07:00 [DBG] Token request success.
2019-02-22 23:09:48.768 +07:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-02-23 10:30:44.320 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:30:44.365 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 10:30:44.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 10:30:44.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 10:30:44.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 10:30:44.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 10:30:44.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 10:30:51.442 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 10:30:51.445 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 10:30:51.445 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 10:30:51.445 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 10:30:51.445 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 10:30:51.445 +07:00 [DBG] Error Url: /home/error
2019-02-23 10:30:51.445 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 10:30:51.477 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:30:51.481 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:30:51.482 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:30:51.486 +07:00 [DBG] Start discovery request
2019-02-23 10:30:53.205 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:30:53.205 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:30:53.206 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:30:53.210 +07:00 [DBG] Start key discovery request
2019-02-23 10:31:05.715 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:31:20.338 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:31:20.338 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:31:20.346 +07:00 [DBG] Start token request.
2019-02-23 10:31:20.351 +07:00 [DBG] Start client validation
2019-02-23 10:31:20.356 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:31:20.360 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:31:20.375 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:31:20.375 +07:00 [DBG] Secret id found: client
2019-02-23 10:31:20.386 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:31:20.395 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:31:20.395 +07:00 [DBG] Client validation success
2019-02-23 10:31:20.420 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP7T5NNRUO:00000001","TimeStamp":"2019-02-23T03:31:20.0000000Z","ProcessId":19544,"LocalIpAddress":"127.0.0.1:33560","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:31:20.436 +07:00 [DBG] Start token request validation
2019-02-23 10:31:20.442 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:31:20.462 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:31:20.470 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:31:20.491 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:31:21.776 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****3Q==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP7T5NNRUO:00000001","TimeStamp":"2019-02-23T03:31:21.0000000Z","ProcessId":19544,"LocalIpAddress":"127.0.0.1:33560","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:31:21.779 +07:00 [DBG] Token request success.
2019-02-23 10:31:24.964 +07:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-02-23 10:35:04.569 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:35:04.605 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 10:35:04.608 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 10:35:04.609 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 10:35:04.609 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 10:35:04.609 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 10:35:04.609 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 10:35:05.070 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 10:35:05.072 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 10:35:05.072 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 10:35:05.072 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 10:35:05.072 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 10:35:05.072 +07:00 [DBG] Error Url: /home/error
2019-02-23 10:35:05.072 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 10:35:05.128 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:35:05.132 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:35:05.132 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:35:05.136 +07:00 [DBG] Start discovery request
2019-02-23 10:35:05.370 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:35:05.373 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:35:05.373 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:35:05.377 +07:00 [DBG] Start key discovery request
2019-02-23 10:35:08.104 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:35:08.110 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:35:08.110 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:35:08.118 +07:00 [DBG] Start token request.
2019-02-23 10:35:08.126 +07:00 [DBG] Start client validation
2019-02-23 10:35:08.132 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:35:08.136 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:35:08.151 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:35:08.151 +07:00 [DBG] Secret id found: client
2019-02-23 10:35:08.162 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:35:08.171 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:35:08.171 +07:00 [DBG] Client validation success
2019-02-23 10:35:08.191 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP7VJ830VQ:00000002","TimeStamp":"2019-02-23T03:35:08.0000000Z","ProcessId":22824,"LocalIpAddress":"127.0.0.1:12735","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:35:08.205 +07:00 [DBG] Start token request validation
2019-02-23 10:35:08.212 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:35:08.233 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:35:08.241 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:35:08.262 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:35:15.120 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****RA==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP7VJ830VQ:00000002","TimeStamp":"2019-02-23T03:35:15.0000000Z","ProcessId":22824,"LocalIpAddress":"127.0.0.1:12735","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:35:15.123 +07:00 [DBG] Token request success.
2019-02-23 10:41:08.791 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:41:08.825 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 10:41:08.828 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 10:41:08.828 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 10:41:08.828 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 10:41:08.828 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 10:41:08.828 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 10:41:09.331 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 10:41:09.333 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 10:41:09.333 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 10:41:09.333 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 10:41:09.333 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 10:41:09.333 +07:00 [DBG] Error Url: /home/error
2019-02-23 10:41:09.334 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 10:41:09.368 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:41:09.374 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:41:09.374 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:41:09.378 +07:00 [DBG] Start discovery request
2019-02-23 10:41:09.600 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:41:09.605 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:41:09.605 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:41:09.610 +07:00 [DBG] Start key discovery request
2019-02-23 10:41:11.149 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:41:11.156 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:41:11.156 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:41:11.164 +07:00 [DBG] Start token request.
2019-02-23 10:41:11.170 +07:00 [DBG] Start client validation
2019-02-23 10:41:11.175 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:41:11.178 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:41:11.193 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:41:11.194 +07:00 [DBG] Secret id found: client
2019-02-23 10:41:11.206 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:41:11.213 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:41:11.214 +07:00 [DBG] Client validation success
2019-02-23 10:41:11.232 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP82VPS9AC:00000002","TimeStamp":"2019-02-23T03:41:11.0000000Z","ProcessId":25824,"LocalIpAddress":"127.0.0.1:26294","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:41:11.246 +07:00 [DBG] Start token request validation
2019-02-23 10:41:11.254 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:41:11.278 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:41:11.288 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:41:11.315 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:41:11.396 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****5Q==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP82VPS9AC:00000002","TimeStamp":"2019-02-23T03:41:11.0000000Z","ProcessId":25824,"LocalIpAddress":"127.0.0.1:26294","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:41:11.398 +07:00 [DBG] Token request success.
2019-02-23 10:41:27.345 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.
Parameter name: length
   at System.String.Substring(Int32 startIndex, Int32 length)
   at samples.Startup.<>c.<<Configure>b__8_0>d.MoveNext() in E:\oss\github\fernet-dotnet\samples\IdentityServer4\Startup.cs:line 95
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-02-23 10:42:05.007 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:42:05.040 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 10:42:05.043 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 10:42:05.043 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 10:42:05.043 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 10:42:05.043 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 10:42:05.043 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 10:42:05.449 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 10:42:05.451 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 10:42:05.451 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 10:42:05.451 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 10:42:05.451 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 10:42:05.451 +07:00 [DBG] Error Url: /home/error
2019-02-23 10:42:05.451 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 10:42:05.494 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:42:05.499 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:42:05.500 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:42:05.504 +07:00 [DBG] Start discovery request
2019-02-23 10:42:05.733 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:42:05.733 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:42:05.733 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:42:05.737 +07:00 [DBG] Start key discovery request
2019-02-23 10:42:08.861 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:42:08.867 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:42:08.867 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:42:08.876 +07:00 [DBG] Start token request.
2019-02-23 10:42:08.882 +07:00 [DBG] Start client validation
2019-02-23 10:42:08.890 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:42:08.894 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:42:08.908 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:42:08.909 +07:00 [DBG] Secret id found: client
2019-02-23 10:42:08.921 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:42:08.928 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:42:08.929 +07:00 [DBG] Client validation success
2019-02-23 10:42:08.948 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP83GH0GGT:00000002","TimeStamp":"2019-02-23T03:42:08.0000000Z","ProcessId":15972,"LocalIpAddress":"127.0.0.1:39611","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:42:08.962 +07:00 [DBG] Start token request validation
2019-02-23 10:42:08.969 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:42:08.990 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:42:08.998 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:42:09.018 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:42:09.104 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****Zw==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP83GH0GGT:00000002","TimeStamp":"2019-02-23T03:42:09.0000000Z","ProcessId":15972,"LocalIpAddress":"127.0.0.1:39611","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:42:09.107 +07:00 [DBG] Token request success.
2019-02-23 10:45:09.958 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:45:10.003 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 10:45:10.006 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 10:45:10.007 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 10:45:10.007 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 10:45:10.007 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 10:45:10.007 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 10:45:10.619 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 10:45:10.621 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 10:45:10.622 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 10:45:10.622 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 10:45:10.622 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 10:45:10.622 +07:00 [DBG] Error Url: /home/error
2019-02-23 10:45:10.622 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 10:45:10.657 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:45:10.661 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:45:10.662 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:45:10.665 +07:00 [DBG] Start discovery request
2019-02-23 10:45:10.871 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:45:10.871 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:45:10.871 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:45:10.875 +07:00 [DBG] Start key discovery request
2019-02-23 10:45:12.608 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:45:12.613 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:45:12.613 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:45:12.620 +07:00 [DBG] Start token request.
2019-02-23 10:45:12.626 +07:00 [DBG] Start client validation
2019-02-23 10:45:12.631 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:45:12.635 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:45:12.649 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:45:12.650 +07:00 [DBG] Secret id found: client
2019-02-23 10:45:12.661 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:45:12.668 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:45:12.669 +07:00 [DBG] Client validation success
2019-02-23 10:45:12.689 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP857MVQNR:00000002","TimeStamp":"2019-02-23T03:45:12.0000000Z","ProcessId":33052,"LocalIpAddress":"127.0.0.1:29488","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:45:12.704 +07:00 [DBG] Start token request validation
2019-02-23 10:45:12.710 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:45:12.731 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:45:12.738 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:45:12.759 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:45:12.857 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****Iw==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP857MVQNR:00000002","TimeStamp":"2019-02-23T03:45:12.0000000Z","ProcessId":33052,"LocalIpAddress":"127.0.0.1:29488","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:45:12.860 +07:00 [DBG] Token request success.
2019-02-23 10:45:34.495 +07:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-02-23 10:46:32.101 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:46:32.136 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 10:46:32.139 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 10:46:32.139 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 10:46:32.139 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 10:46:32.139 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 10:46:32.139 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 10:46:32.763 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 10:46:32.764 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 10:46:32.764 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 10:46:32.764 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 10:46:32.765 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 10:46:32.765 +07:00 [DBG] Error Url: /home/error
2019-02-23 10:46:32.765 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 10:46:32.802 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:46:32.806 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:46:32.806 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:46:32.810 +07:00 [DBG] Start discovery request
2019-02-23 10:46:33.057 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:46:33.057 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:46:33.057 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:46:33.062 +07:00 [DBG] Start key discovery request
2019-02-23 10:46:34.598 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:46:34.604 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:46:34.604 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:46:34.611 +07:00 [DBG] Start token request.
2019-02-23 10:46:34.619 +07:00 [DBG] Start client validation
2019-02-23 10:46:34.625 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:46:34.629 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:46:34.647 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:46:34.647 +07:00 [DBG] Secret id found: client
2019-02-23 10:46:34.661 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:46:34.669 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:46:34.669 +07:00 [DBG] Client validation success
2019-02-23 10:46:34.689 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8606AQ97:00000002","TimeStamp":"2019-02-23T03:46:34.0000000Z","ProcessId":28164,"LocalIpAddress":"127.0.0.1:11963","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:46:34.705 +07:00 [DBG] Start token request validation
2019-02-23 10:46:34.712 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:46:34.735 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:46:34.743 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:46:34.767 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:46:34.848 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****CQ==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8606AQ97:00000002","TimeStamp":"2019-02-23T03:46:34.0000000Z","ProcessId":28164,"LocalIpAddress":"127.0.0.1:11963","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:46:34.850 +07:00 [DBG] Token request success.
2019-02-23 10:46:43.061 +07:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-02-23 10:47:18.152 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:47:18.185 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 10:47:18.189 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 10:47:18.189 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 10:47:18.189 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 10:47:18.189 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 10:47:18.189 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 10:47:18.735 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 10:47:18.737 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 10:47:18.737 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 10:47:18.737 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 10:47:18.737 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 10:47:18.737 +07:00 [DBG] Error Url: /home/error
2019-02-23 10:47:18.737 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 10:47:18.793 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:47:18.797 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:47:18.797 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:47:18.802 +07:00 [DBG] Start discovery request
2019-02-23 10:47:19.022 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:47:19.023 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:47:19.023 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:47:19.027 +07:00 [DBG] Start key discovery request
2019-02-23 10:47:19.338 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:47:19.344 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:47:19.344 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:47:19.352 +07:00 [DBG] Start token request.
2019-02-23 10:47:19.362 +07:00 [DBG] Start client validation
2019-02-23 10:47:19.368 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:47:19.373 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:47:19.389 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:47:19.389 +07:00 [DBG] Secret id found: client
2019-02-23 10:47:19.402 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:47:19.414 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:47:19.415 +07:00 [DBG] Client validation success
2019-02-23 10:47:19.437 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP86DST2DA:00000002","TimeStamp":"2019-02-23T03:47:19.0000000Z","ProcessId":26628,"LocalIpAddress":"127.0.0.1:14178","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:47:19.458 +07:00 [DBG] Start token request validation
2019-02-23 10:47:19.466 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:47:19.495 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:47:19.505 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:47:19.528 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:47:19.612 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****xw==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP86DST2DA:00000002","TimeStamp":"2019-02-23T03:47:19.0000000Z","ProcessId":26628,"LocalIpAddress":"127.0.0.1:14178","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:47:19.615 +07:00 [DBG] Token request success.
2019-02-23 10:47:26.118 +07:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-02-23 10:52:39.752 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 10:52:39.790 +07:00 [INF] Using the default authentication scheme Bearer for IdentityServer
2019-02-23 10:52:39.795 +07:00 [ERR] Authentication scheme Bearer is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). Either configure the default authentication scheme with cookies or set the CookieAuthenticationScheme on the IdentityServerOptions.
2019-02-23 10:52:39.795 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for authentication
2019-02-23 10:52:39.795 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for sign-in
2019-02-23 10:52:39.795 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for sign-out
2019-02-23 10:52:39.795 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for challenge
2019-02-23 10:52:39.795 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for forbid
2019-02-23 10:52:40.433 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:52:40.440 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:52:40.440 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:52:40.444 +07:00 [DBG] Start discovery request
2019-02-23 10:52:40.659 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:52:40.660 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:52:40.660 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:52:40.664 +07:00 [DBG] Start key discovery request
2019-02-23 10:52:42.430 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 10:52:42.437 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 10:52:42.437 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 10:52:42.445 +07:00 [DBG] Start token request.
2019-02-23 10:52:42.451 +07:00 [DBG] Start client validation
2019-02-23 10:52:42.457 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 10:52:42.460 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 10:52:42.476 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 10:52:42.476 +07:00 [DBG] Secret id found: client
2019-02-23 10:52:42.487 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 10:52:42.495 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 10:52:42.495 +07:00 [DBG] Client validation success
2019-02-23 10:52:42.516 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP89DNJ5TC:00000002","TimeStamp":"2019-02-23T03:52:42.0000000Z","ProcessId":29876,"LocalIpAddress":"127.0.0.1:17368","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 10:52:42.529 +07:00 [DBG] Start token request validation
2019-02-23 10:52:42.536 +07:00 [DBG] Start client credentials token request validation
2019-02-23 10:52:42.562 +07:00 [DBG] client credentials token request validation success
2019-02-23 10:52:42.570 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 10:52:42.591 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 10:52:42.671 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****zw==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP89DNJ5TC:00000002","TimeStamp":"2019-02-23T03:52:42.0000000Z","ProcessId":29876,"LocalIpAddress":"127.0.0.1:17368","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 10:52:42.674 +07:00 [DBG] Token request success.
2019-02-23 10:53:12.974 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 10:53:12.975 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 10:53:12.975 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 10:53:12.975 +07:00 [DBG] Start discovery request
2019-02-23 10:53:13.043 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 10:53:13.044 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 10:53:13.044 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 10:53:13.055 +07:00 [DBG] Start key discovery request
2019-02-23 10:53:13.121 +07:00 [INF] Successfully validated the token.
2019-02-23 11:01:30.970 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:01:31.006 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:01:31.010 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:01:31.011 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:01:31.011 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:01:31.011 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:01:31.011 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:01:31.524 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:01:31.527 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:01:31.527 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:01:31.527 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:01:31.527 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:01:31.527 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:01:31.527 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:01:31.570 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:01:31.574 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:01:31.574 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:01:31.579 +07:00 [DBG] Start discovery request
2019-02-23 11:01:31.808 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:01:31.809 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:01:31.809 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:01:31.813 +07:00 [DBG] Start key discovery request
2019-02-23 11:01:33.593 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:01:33.599 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:01:33.600 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:01:33.608 +07:00 [DBG] Start token request.
2019-02-23 11:01:33.616 +07:00 [DBG] Start client validation
2019-02-23 11:01:33.622 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:01:33.627 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:01:33.645 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:01:33.645 +07:00 [DBG] Secret id found: client
2019-02-23 11:01:33.657 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:01:33.666 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:01:33.666 +07:00 [DBG] Client validation success
2019-02-23 11:01:33.689 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8EC1ML8U:00000002","TimeStamp":"2019-02-23T04:01:33.0000000Z","ProcessId":36164,"LocalIpAddress":"127.0.0.1:45164","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:01:33.712 +07:00 [DBG] Start token request validation
2019-02-23 11:01:33.719 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:01:33.740 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:01:33.747 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:01:33.767 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:01:33.851 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****ow==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8EC1ML8U:00000002","TimeStamp":"2019-02-23T04:01:33.0000000Z","ProcessId":36164,"LocalIpAddress":"127.0.0.1:45164","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:01:33.853 +07:00 [DBG] Token request success.
2019-02-23 11:03:20.600 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:03:20.633 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:03:20.636 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:03:20.636 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:03:20.636 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:03:20.636 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:03:20.636 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:03:21.213 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:03:21.216 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:03:21.216 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:03:21.216 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:03:21.216 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:03:21.216 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:03:21.216 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:03:21.251 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:03:21.255 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:03:21.255 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:03:21.258 +07:00 [DBG] Start discovery request
2019-02-23 11:03:21.467 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:03:21.468 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:03:21.468 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:03:21.472 +07:00 [DBG] Start key discovery request
2019-02-23 11:03:23.038 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:03:23.045 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:03:23.045 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:03:23.053 +07:00 [DBG] Start token request.
2019-02-23 11:03:23.061 +07:00 [DBG] Start client validation
2019-02-23 11:03:23.067 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:03:23.071 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:03:23.085 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:03:23.085 +07:00 [DBG] Secret id found: client
2019-02-23 11:03:23.096 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:03:23.104 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:03:23.104 +07:00 [DBG] Client validation success
2019-02-23 11:03:23.123 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8FCNM1E5:00000002","TimeStamp":"2019-02-23T04:03:23.0000000Z","ProcessId":14876,"LocalIpAddress":"127.0.0.1:42682","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:03:23.137 +07:00 [DBG] Start token request validation
2019-02-23 11:03:23.144 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:03:23.164 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:03:23.172 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:03:23.193 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:03:23.290 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****VQ==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8FCNM1E5:00000002","TimeStamp":"2019-02-23T04:03:23.0000000Z","ProcessId":14876,"LocalIpAddress":"127.0.0.1:42682","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:03:23.293 +07:00 [DBG] Token request success.
2019-02-23 11:03:55.460 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:03:55.493 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:03:55.496 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:03:55.496 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:03:55.496 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:03:55.496 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:03:55.496 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:03:55.718 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:03:55.720 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:03:55.720 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:03:55.720 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:03:55.720 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:03:55.720 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:03:55.720 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:04:50.008 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:04:50.039 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:04:50.042 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:04:50.042 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:04:50.042 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:04:50.042 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:04:50.042 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:04:50.464 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:04:50.467 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:04:50.467 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:04:50.467 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:04:50.467 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:04:50.467 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:04:50.467 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:05:23.010 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:05:23.014 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:05:23.014 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:05:23.019 +07:00 [DBG] Start discovery request
2019-02-23 11:05:23.126 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:05:23.126 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:05:23.126 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:05:23.130 +07:00 [DBG] Start key discovery request
2019-02-23 11:05:25.340 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:05:25.350 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:05:25.350 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:05:25.359 +07:00 [DBG] Start token request.
2019-02-23 11:05:25.366 +07:00 [DBG] Start client validation
2019-02-23 11:05:25.373 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:05:25.379 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:05:25.400 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:05:25.400 +07:00 [DBG] Secret id found: client
2019-02-23 11:05:25.414 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:05:25.425 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:05:25.425 +07:00 [DBG] Client validation success
2019-02-23 11:05:25.449 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8G7BKC5E:00000007","TimeStamp":"2019-02-23T04:05:25.0000000Z","ProcessId":33148,"LocalIpAddress":"127.0.0.1:28885","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:05:25.464 +07:00 [DBG] Start token request validation
2019-02-23 11:05:25.471 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:05:25.493 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:05:25.501 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:05:25.527 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:05:25.630 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****Tg==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8G7BKC5E:00000007","TimeStamp":"2019-02-23T04:05:25.0000000Z","ProcessId":33148,"LocalIpAddress":"127.0.0.1:28885","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:05:25.632 +07:00 [DBG] Token request success.
2019-02-23 11:06:18.322 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:06:18.365 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:06:18.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:06:18.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:06:18.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:06:18.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:06:18.368 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:06:18.970 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:06:18.972 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:06:18.972 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:06:18.972 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:06:18.972 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:06:18.972 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:06:18.972 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:06:19.018 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:06:19.023 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:06:19.023 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:06:19.028 +07:00 [DBG] Start discovery request
2019-02-23 11:06:19.218 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:06:19.220 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:06:19.220 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:06:19.225 +07:00 [DBG] Start key discovery request
2019-02-23 11:06:19.614 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:06:19.621 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:06:19.621 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:06:19.631 +07:00 [DBG] Start token request.
2019-02-23 11:06:19.639 +07:00 [DBG] Start client validation
2019-02-23 11:06:19.648 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:06:19.656 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:06:19.679 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:06:19.679 +07:00 [DBG] Secret id found: client
2019-02-23 11:06:19.695 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:06:19.706 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:06:19.707 +07:00 [DBG] Client validation success
2019-02-23 11:06:19.731 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8H1MLT68:00000002","TimeStamp":"2019-02-23T04:06:19.0000000Z","ProcessId":19776,"LocalIpAddress":"127.0.0.1:13945","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:06:19.754 +07:00 [DBG] Start token request validation
2019-02-23 11:06:19.763 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:06:19.815 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:06:19.824 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:06:19.865 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:06:19.983 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****Hg==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8H1MLT68:00000002","TimeStamp":"2019-02-23T04:06:19.0000000Z","ProcessId":19776,"LocalIpAddress":"127.0.0.1:13945","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:06:19.987 +07:00 [DBG] Token request success.
2019-02-23 11:07:10.753 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:07:10.791 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:07:10.794 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:07:10.794 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:07:10.794 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:07:10.794 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:07:10.794 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:07:11.284 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:07:11.287 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:07:11.287 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:07:11.287 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:07:11.287 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:07:11.287 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:07:11.287 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:07:11.381 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:07:11.386 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:07:11.387 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:07:11.396 +07:00 [DBG] Start discovery request
2019-02-23 11:07:11.652 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:07:11.652 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:07:11.652 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:07:11.657 +07:00 [DBG] Start key discovery request
2019-02-23 11:07:12.050 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:07:12.056 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:07:12.056 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:07:12.066 +07:00 [DBG] Start token request.
2019-02-23 11:07:12.071 +07:00 [DBG] Start client validation
2019-02-23 11:07:12.076 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:07:12.080 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:07:12.098 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:07:12.098 +07:00 [DBG] Secret id found: client
2019-02-23 11:07:12.115 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:07:12.124 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:07:12.125 +07:00 [DBG] Client validation success
2019-02-23 11:07:12.150 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8HH9DF6C:00000002","TimeStamp":"2019-02-23T04:07:12.0000000Z","ProcessId":27848,"LocalIpAddress":"127.0.0.1:5127","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:07:12.170 +07:00 [DBG] Start token request validation
2019-02-23 11:07:12.180 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:07:12.216 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:07:12.227 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:07:12.251 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:07:12.342 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****Jg==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8HH9DF6C:00000002","TimeStamp":"2019-02-23T04:07:12.0000000Z","ProcessId":27848,"LocalIpAddress":"127.0.0.1:5127","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:07:12.345 +07:00 [DBG] Token request success.
2019-02-23 11:07:41.175 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:07:41.216 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:07:41.220 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:07:41.220 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:07:41.220 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:07:41.220 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:07:41.220 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:07:41.814 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:07:41.816 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:07:41.816 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:07:41.816 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:07:41.816 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:07:41.816 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:07:41.816 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:07:41.849 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:07:41.853 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:07:41.853 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:07:41.859 +07:00 [DBG] Start discovery request
2019-02-23 11:07:42.057 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:07:42.057 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:07:42.057 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:07:42.063 +07:00 [DBG] Start key discovery request
2019-02-23 11:07:42.421 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:07:42.428 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:07:42.428 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:07:42.437 +07:00 [DBG] Start token request.
2019-02-23 11:07:42.446 +07:00 [DBG] Start client validation
2019-02-23 11:07:42.451 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:07:42.457 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:07:42.477 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:07:42.477 +07:00 [DBG] Secret id found: client
2019-02-23 11:07:42.489 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:07:42.502 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:07:42.502 +07:00 [DBG] Client validation success
2019-02-23 11:07:42.532 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8HQD1BN2:00000002","TimeStamp":"2019-02-23T04:07:42.0000000Z","ProcessId":35164,"LocalIpAddress":"127.0.0.1:19202","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:07:42.554 +07:00 [DBG] Start token request validation
2019-02-23 11:07:42.565 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:07:42.591 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:07:42.610 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:07:42.642 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:07:42.748 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****IQ==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8HQD1BN2:00000002","TimeStamp":"2019-02-23T04:07:42.0000000Z","ProcessId":35164,"LocalIpAddress":"127.0.0.1:19202","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:07:42.750 +07:00 [DBG] Token request success.
2019-02-23 11:07:58.925 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:07:58.963 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:07:58.965 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:07:58.965 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:07:58.966 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:07:58.966 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:07:58.966 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:07:59.468 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:07:59.471 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:07:59.471 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:07:59.471 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:07:59.471 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:07:59.471 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:07:59.471 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:07:59.523 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:07:59.528 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:07:59.528 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:07:59.532 +07:00 [DBG] Start discovery request
2019-02-23 11:07:59.708 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:07:59.709 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:07:59.709 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:07:59.715 +07:00 [DBG] Start key discovery request
2019-02-23 11:08:00.352 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:08:00.363 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:08:00.363 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:08:00.376 +07:00 [DBG] Start token request.
2019-02-23 11:08:00.385 +07:00 [DBG] Start client validation
2019-02-23 11:08:00.393 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:08:00.399 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:08:00.422 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:08:00.422 +07:00 [DBG] Secret id found: client
2019-02-23 11:08:00.437 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:08:00.448 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:08:00.448 +07:00 [DBG] Client validation success
2019-02-23 11:08:00.476 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8HVL7B85:00000002","TimeStamp":"2019-02-23T04:08:00.0000000Z","ProcessId":6852,"LocalIpAddress":"127.0.0.1:2450","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:08:00.493 +07:00 [DBG] Start token request validation
2019-02-23 11:08:00.502 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:08:00.536 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:08:00.550 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:08:00.584 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:08:00.686 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****0w==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8HVL7B85:00000002","TimeStamp":"2019-02-23T04:08:00.0000000Z","ProcessId":6852,"LocalIpAddress":"127.0.0.1:2450","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:08:00.690 +07:00 [DBG] Token request success.
2019-02-23 11:11:05.497 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:11:05.540 +07:00 [INF] Using the default authentication scheme Bearer for IdentityServer
2019-02-23 11:11:05.542 +07:00 [ERR] Authentication scheme Bearer is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). Either configure the default authentication scheme with cookies or set the CookieAuthenticationScheme on the IdentityServerOptions.
2019-02-23 11:11:05.542 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for authentication
2019-02-23 11:11:05.542 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for sign-in
2019-02-23 11:11:05.542 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for sign-out
2019-02-23 11:11:05.542 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for challenge
2019-02-23 11:11:05.543 +07:00 [DBG] Using Bearer as default ASP.NET Core scheme for forbid
2019-02-23 11:11:06.331 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:11:06.340 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:11:06.340 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:11:06.346 +07:00 [DBG] Start discovery request
2019-02-23 11:11:06.555 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:11:06.556 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:11:06.556 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:11:06.560 +07:00 [DBG] Start key discovery request
2019-02-23 11:11:06.896 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:11:06.910 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:11:06.910 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:11:06.921 +07:00 [DBG] Start token request.
2019-02-23 11:11:06.932 +07:00 [DBG] Start client validation
2019-02-23 11:11:06.944 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:11:06.957 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:11:06.982 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:11:06.982 +07:00 [DBG] Secret id found: client
2019-02-23 11:11:06.997 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:11:07.010 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:11:07.010 +07:00 [DBG] Client validation success
2019-02-23 11:11:07.032 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8JNA173K:00000002","TimeStamp":"2019-02-23T04:11:07.0000000Z","ProcessId":4816,"LocalIpAddress":"127.0.0.1:45228","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:11:07.050 +07:00 [DBG] Start token request validation
2019-02-23 11:11:07.062 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:11:07.099 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:11:07.111 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:11:07.144 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:11:07.256 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****Sw==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8JNA173K:00000002","TimeStamp":"2019-02-23T04:11:07.0000000Z","ProcessId":4816,"LocalIpAddress":"127.0.0.1:45228","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:11:07.260 +07:00 [DBG] Token request success.
2019-02-23 11:13:26.632 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:13:26.667 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:13:26.671 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:13:26.671 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:13:26.671 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:13:26.671 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:13:26.671 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:13:27.189 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:13:27.191 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:13:27.191 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:13:27.192 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:13:27.192 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:13:27.192 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:13:27.192 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:13:27.236 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:13:27.239 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:13:27.240 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:13:27.244 +07:00 [DBG] Start discovery request
2019-02-23 11:13:27.396 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:13:27.396 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:13:27.396 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:13:27.401 +07:00 [DBG] Start key discovery request
2019-02-23 11:13:27.777 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:13:27.789 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:13:27.789 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:13:27.802 +07:00 [DBG] Start token request.
2019-02-23 11:13:27.809 +07:00 [DBG] Start client validation
2019-02-23 11:13:27.817 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:13:27.821 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:13:27.844 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:13:27.844 +07:00 [DBG] Secret id found: client
2019-02-23 11:13:27.860 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:13:27.871 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:13:27.871 +07:00 [DBG] Client validation success
2019-02-23 11:13:27.895 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8L1AM1S1:00000002","TimeStamp":"2019-02-23T04:13:27.0000000Z","ProcessId":9060,"LocalIpAddress":"127.0.0.1:1987","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:13:27.915 +07:00 [DBG] Start token request validation
2019-02-23 11:13:27.922 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:13:27.949 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:13:27.956 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:13:27.976 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:13:28.067 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****hw==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8L1AM1S1:00000002","TimeStamp":"2019-02-23T04:13:28.0000000Z","ProcessId":9060,"LocalIpAddress":"127.0.0.1:1987","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:13:28.070 +07:00 [DBG] Token request success.
2019-02-23 11:13:45.221 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:13:45.221 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:13:45.222 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:13:45.222 +07:00 [DBG] Start discovery request
2019-02-23 11:13:45.382 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:13:45.382 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:13:45.382 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:13:45.382 +07:00 [DBG] Start key discovery request
2019-02-23 11:17:16.631 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:17:16.671 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:17:16.673 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:17:16.673 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:17:16.674 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:17:16.674 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:17:16.674 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:17:17.128 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:17:17.130 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:17:17.130 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:17:17.130 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:17:17.130 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:17:17.130 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:17:17.130 +07:00 [DBG] Error Id Parameter: errorId
2019-02-23 11:17:17.173 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:17:17.177 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:17:17.178 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:17:17.182 +07:00 [DBG] Start discovery request
2019-02-23 11:17:17.398 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:17:17.399 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:17:17.399 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:17:17.403 +07:00 [DBG] Start key discovery request
2019-02-23 11:17:18.264 +07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-02-23 11:17:18.272 +07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-02-23 11:17:18.272 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-02-23 11:17:18.280 +07:00 [DBG] Start token request.
2019-02-23 11:17:18.286 +07:00 [DBG] Start client validation
2019-02-23 11:17:18.292 +07:00 [DBG] Start parsing Basic Authentication secret
2019-02-23 11:17:18.297 +07:00 [DBG] Start parsing for secret in post body
2019-02-23 11:17:18.312 +07:00 [DBG] Parser found secret: PostBodySecretParser
2019-02-23 11:17:18.313 +07:00 [DBG] Secret id found: client
2019-02-23 11:17:18.326 +07:00 [DBG] client configuration validation for client client succeeded.
2019-02-23 11:17:18.334 +07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-02-23 11:17:18.334 +07:00 [DBG] Client validation success
2019-02-23 11:17:18.352 +07:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLKP8N5RIGO2:00000002","TimeStamp":"2019-02-23T04:17:18.0000000Z","ProcessId":22708,"LocalIpAddress":"127.0.0.1:39495","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-02-23 11:17:18.365 +07:00 [DBG] Start token request validation
2019-02-23 11:17:18.372 +07:00 [DBG] Start client credentials token request validation
2019-02-23 11:17:18.391 +07:00 [DBG] client credentials token request validation success
2019-02-23 11:17:18.398 +07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":"Client Credentials Client","GrantType":"client_credentials","Scopes":"api1","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-02-23 11:17:18.426 +07:00 [DBG] Getting claims for access token for client: client
2019-02-23 11:17:18.515 +07:00 [INF] {"ClientId":"client","ClientName":"Client Credentials Client","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"api1","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****Yw==","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLKP8N5RIGO2:00000002","TimeStamp":"2019-02-23T04:17:18.0000000Z","ProcessId":22708,"LocalIpAddress":"127.0.0.1:39495","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-02-23 11:17:18.517 +07:00 [DBG] Token request success.
2019-02-23 11:18:22.848 +07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-02-23 11:18:22.848 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-02-23 11:18:22.848 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-02-23 11:18:22.849 +07:00 [DBG] Start discovery request
2019-02-23 11:18:22.989 +07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-02-23 11:18:22.989 +07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-02-23 11:18:22.989 +07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-02-23 11:18:22.989 +07:00 [DBG] Start key discovery request
2019-02-23 11:28:42.689 +07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-02-23 11:28:42.726 +07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-02-23 11:28:42.729 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-02-23 11:28:42.729 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-02-23 11:28:42.729 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-02-23 11:28:42.729 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-02-23 11:28:42.730 +07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-02-23 11:28:43.333 +07:00 [DBG] Login Url: /Account/Login
2019-02-23 11:28:43.336 +07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-02-23 11:28:43.336 +07:00 [DBG] Logout Url: /Account/Logout
2019-02-23 11:28:43.336 +07:00 [DBG] ConsentUrl Url: /consent
2019-02-23 11:28:43.336 +07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-02-23 11:28:43.336 +07:00 [DBG] Error Url: /home/error
2019-02-23 11:28:43.336 +07:00 [DBG] Error Id Parameter: errorId
